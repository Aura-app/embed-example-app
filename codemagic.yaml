workflows:
  expo-embed-build:
    name: Expo Embed Build & Publish
    max_build_duration: 60
    
    environment:
      groups:
        - expo-embed
      
      vars:
        EXPO_SDK_VERSION: "53.0.0"
        NODE_VERSION: "18"
        
      node: 18.17.0
      xcode: latest
      cocoapods: default
    
    cache:
      cache_paths:
        - $HOME/.npm
        - $HOME/Library/Caches/CocoaPods
        - node_modules
        - $HOME/.gradle/caches
    
    triggering:
      events: [] # Manual trigger only
    
    scripts:
      - name: Install dependencies
        script: |
          npm ci
          
      - name: Install iOS dependencies
        script: |
          cd ios && pod install
          
      - name: Decode Android Keystore
        script: |
          echo $ANDROID_KEYSTORE_BASE64 | base64 --decode > android/app/keystore.jks
          
      - name: Build Android (AAB)
        script: |
          cd android
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=keystore.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
          cd ..

      - name: Build iOS IPA
        script: |
          cd ios
          
          # Find workspace or project
          WORKSPACE=$(find . -name "*.xcworkspace" -type d | head -1)
          PROJECT=$(find . -name "*.xcodeproj" -type d | head -1)
          
          # Create export options
          cat > export_options.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>signingStyle</key>
              <string>automatic</string>
          </dict>
          </plist>
          EOF
          
          # Build
          if [ -n "$WORKSPACE" ]; then
            WORKSPACE_NAME=$(basename "$WORKSPACE")
            xcodebuild -workspace "$WORKSPACE_NAME" -scheme AuraEmbedApp -configuration Release archive -archivePath build/app.xcarchive
          else
            PROJECT_NAME=$(basename "$PROJECT")
            xcodebuild -project "$PROJECT_NAME" -scheme AuraEmbedApp -configuration Release archive -archivePath build/app.xcarchive
          fi
          
          # Export IPA
          xcodebuild -exportArchive -archivePath build/app.xcarchive -exportPath build -exportOptionsPlist export_options.plist
          
          # Copy to root
          cp build/*.ipa ../

      - name: Verify Build Artifacts
        script: |
          echo "=== iOS Files ==="
          find . -name "*.ipa" -type f
          echo "=== Android Files ==="
          find . -name "*.aab" -type f
    
    artifacts:
      - build/ios/ipa/*.ipa
      - android/app/build/outputs/bundle/release/*.aab
      - "*.ipa"
      - "*.aab"
    
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER  
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        submit_to_app_store: false
        
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: false
        
      email:
        recipients:
          - kutbip@aura.services
        notify:
          success: true
          failure: true