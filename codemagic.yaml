workflows:
  expo-embed-build:
    name: Expo Embed Build & Publish
    max_build_duration: 60
    
    environment:
      groups:
        - expo-embed
      
      vars:
        EXPO_SDK_VERSION: "53.0.0"
        NODE_VERSION: "18"
        
      node: 18.17.0
      xcode: latest
      cocoapods: default
    
    cache:
      cache_paths:
        - $HOME/.npm
        - $HOME/Library/Caches/CocoaPods
        - node_modules
        - $HOME/.gradle/caches
    
    triggering:
      events: [] # Manual trigger only
    
    scripts:
      - name: Install dependencies
        script: |
          npm ci
          
      - name: Install Expo CLI
        script: |
          npm install -g @expo/cli@latest
          
      - name: Expo prebuild (generate ios/ and android/)
        script: |
          npx expo prebuild --clean --platform all
          
      - name: Decode Android Keystore
        script: |
          echo $ANDROID_KEYSTORE_BASE64 | base64 --decode > android/app/keystore.jks
          
      - name: Build Android (AAB)
        script: |
          cd android
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=keystore.jks \
            -Pandroid.injected.signing.store.password=$CM_KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$CM_KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$CM_KEY_PASSWORD
          cd ..
          
      - name: Build iOS (IPA)
        script: |
          # List iOS directory
          echo "Contents of ios/:"
          ls ios

          # Prefer .xcworkspace if exists, otherwise fall back to .xcodeproj
          WORKSPACE=$(ls ios/*.xcworkspace 2>/dev/null | head -n 1)
          PROJECT=$(ls ios/*.xcodeproj 2>/dev/null | head -n 1)

          if [ -n "$WORKSPACE" ]; then
            echo "Detected workspace: $WORKSPACE"
            SCHEME=$(xcodebuild -list -json -workspace "$WORKSPACE" | jq -r '.workspace.schemes[0]')
            echo "Detected scheme: $SCHEME"
            xcode-project build-ipa \
              --workspace "$WORKSPACE" \
              --scheme "$SCHEME" \
              --archive-flags="-destination generic/platform=iOS"
          elif [ -n "$PROJECT" ]; then
            echo "Detected project: $PROJECT"
            SCHEME=$(xcodebuild -list -json -project "$PROJECT" | jq -r '.project.schemes[0]')
            echo "Detected scheme: $SCHEME"
            xcode-project build-ipa \
              --project "$PROJECT" \
              --scheme "$SCHEME" \
              --archive-flags="-destination generic/platform=iOS"
          else
            echo "❌ No .xcworkspace or .xcodeproj found in ios/ directory"
            exit 1
          fi
          
      - name: Verify Build Artifacts
        script: |
          echo "=== iOS Files ==="
          find . -name "*.ipa" -type f
          echo "=== Android Files ==="
          find . -name "*.aab" -type f
          find . -name "*.apk" -type f
          echo "=== All Build Files ==="
          ls -la *.ipa *.aab *.apk 2>/dev/null || echo "Some files may be in subdirectories"
    
    artifacts:
      - build/ios/ipa/*.ipa
      - android/app/build/outputs/bundle/release/*.aab
      - "*.ipa"
      - "*.aab"
    
    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER  
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
        submit_to_app_store: false
        
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: false
        
      email:
        recipients:
          - kutbip@aura.services
        notify:
          success: true
          failure: true
