workflows:
  expo-embed-build:
    name: Expo Embed Build & Publish
    max_build_duration: 60

    integrations:
      app_store_connect: AuraEmbedApp

    environment:
      groups:
        - expo-embed

      ios_signing:
        distribution_type: app_store
        bundle_identifier: $BUNDLE_ID

      vars:
        EXPO_SDK_VERSION: "53.0.0"
        NODE_VERSION: "18"

      node: 18.17.0
      xcode: latest
      cocoapods: default

    cache:
      cache_paths:
        - $HOME/.npm
        - $HOME/Library/Caches/CocoaPods
        - node_modules
        - $HOME/.gradle/caches

    triggering:
      events: [] # Manual trigger only

    scripts:
      - name: Install dependencies
        script: |
          npm ci

      - name: Expo prebuild (generate ios/ and android/)
        script: |
          npx expo prebuild --clean --platform all \
            --bundle-identifier $BUNDLE_ID

      - name: Decode Android Keystore
        script: |
          mkdir -p android/app
          echo $ANDROID_KEYSTORE_BASE64 | base64 --decode > android/app/keystore.jks

      - name: Build Android (AAB)
        script: |
          cd android
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=keystore.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD
          cd ..

      - name: Install iOS dependencies with Swift fix
        script: |
          cd ios
          pod install
          ruby << 'RUBY_SCRIPT'
          require 'xcodeproj'
          project_path = 'Pods/Pods.xcodeproj'
          if File.exist?(project_path)
            project = Xcodeproj::Project.open(project_path)
            project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
              end
            end
            project.save
          end
          RUBY_SCRIPT
          cd ..

      - name: Build iOS (IPA)
        script: |
          xcode-project build-ipa \
            --workspace "ios/AuraEmbedApp.xcworkspace" \
            --scheme "AuraEmbedApp" \
            --export-method app-store \
            --bundle-id $BUNDLE_ID

    artifacts:
      - build/ios/ipa/*.ipa
      - build/app/outputs/**/*.aab
      - build/app/outputs/**/*.apk
